Sat Sep 03 15:43:33 2016
Windows-8-6.2.9200
Ren'Py 6.99.10.1227
 

Bootstrap to the start of init.init took 0.27s
Early init took 0.03s
Loader init took 0.05s
Loading error handling took 0.05s
Loading script took 0.24s
Loading persistent took 0.01s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.23s
Loading analysis data took 0.10s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Dump and make backups. took 0.21s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.000000
Creating interface object took 0.06s
Cleaning stores took 0.00s
Init translation took 0.01s
Build styles took 0.00s
Load screen analysis took 0.04s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.15s
Save pyanalysis. took 0.00s
Save bytecode. took 0.00s
Running _start took 0.00s
Performance test:
Interface start took 0.03s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\display\core.py", line 1702, in make_draw
    __import__(mod)
ImportError: DLL load failed: ÕÒ²»µ½Ö¸¶¨µÄÄ£¿é¡£
Unknown renderer: angle

primary display bounds: (0, 0, 1280, 1024)
Windowed mode.
Screen sizes: virtual=(800, 600) physical=(800, 600) drawable=(800, 600)
Vendor: 'ATI Technologies Inc.'
Renderer: 'ATI Radeon 3000 Graphics'
Version: '3.3.11672 Compatibility Profile Context'
Display Info: <Info({'blit_sw_CC': False, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1024, 'current_w': 1280, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    GL_AMDX_debug_output
    GL_AMD_conservative_depth
    GL_AMD_debug_output
    GL_AMD_depth_clamp_separate
    GL_AMD_draw_buffers_blend
    GL_AMD_name_gen_delete
    GL_AMD_performance_monitor
    GL_AMD_pinned_memory
    GL_AMD_sample_positions
    GL_AMD_shader_stencil_export
    GL_ARB_ES2_compatibility
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_color_buffer_float
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_instanced
    GL_ARB_explicit_attrib_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_imaging
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_provoking_vertex
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_separate_shader_objects
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_stencil_export
    GL_ARB_shader_texture_lod
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_shadow_ambient
    GL_ARB_sync
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_compression
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_snorm
    GL_ARB_texture_storage
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_draw_buffers
    GL_ATI_envmap_bumpmap
    GL_ATI_fragment_shader
    GL_ATI_meminfo
    GL_ATI_separate_stencil
    GL_ATI_texture_compression_3dc
    GL_ATI_texture_env_combine3
    GL_ATI_texture_float
    GL_ATI_texture_mirror_once
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_bindable_uniform
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_compiled_vertex_array
    GL_EXT_copy_buffer
    GL_EXT_copy_texture
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_instanced
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_framebuffer_sRGB
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_histogram
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_pixel_buffer_object
    GL_EXT_point_parameters
    GL_EXT_provoking_vertex
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shadow_funcs
    GL_EXT_stencil_wrap
    GL_EXT_subtexture
    GL_EXT_texgen_reflection
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_buffer_object
    GL_EXT_texture_compression_latc
    GL_EXT_texture_compression_rgtc
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_cube_map
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_env_dot3
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod
    GL_EXT_texture_lod_bias
    GL_EXT_texture_mirror_clamp
    GL_EXT_texture_object
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_EXT_vertex_array
    GL_EXT_vertex_array_bgra
    GL_IBM_texture_mirrored_repeat
    GL_KTX_buffer_region
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_copy_depth_to_color
    GL_NV_copy_image
    GL_NV_explicit_multisample
    GL_NV_float_buffer
    GL_NV_half_float
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_NV_texture_barrier
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
    WGL_EXT_swap_control
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 8192
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 3.8630001545s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.043000 seconds.
- Frame drawn at 0.074000 seconds.
- Frame drawn at 0.089000 seconds.
- Frame drawn at 0.104000 seconds.
- 0.104000 seconds to render 5 frames.
Traceback (most recent call last):
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\execution.py", line 408, in run
    node.execute()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\ast.py", line 1648, in execute
    if renpy.python.py_eval(condition):
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\python.py", line 1606, in py_eval
    return py_eval_bytecode(code, globals, locals)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\python.py", line 1601, in py_eval_bytecode
    return eval(bytecode, globals, locals)
  File "renpy/common/00layout.rpy", line 79, in <module>
    if layout.invoke_yesno_prompt(None, layout.QUIT):
  File "renpy/common/00layout.rpy", line 472, in invoke_yesno_prompt
    rv = layout.yesno_prompt(*args)
  File "renpy/common/_layout/screen_yesno_prompt.rpym", line 35, in yesno_prompt
    return ui.interact()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\ui.py", line 277, in interact
    rv = renpy.game.interface.interact(roll_forward=roll_forward, **kwargs)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\display\core.py", line 2425, in interact
    repeat, rv = self.interact_core(preloads=preloads, **kwargs)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\display\core.py", line 2725, in interact_core
    renpy.audio.audio.interact()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 919, in interact
    periodic()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 853, in periodic
    c.periodic()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 400, in periodic
    topf = load(self.file_prefix + filename + self.file_suffix)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 66, in load
    rv = renpy.loader.load(fn)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\loader.py", line 533, in load
    raise IOError("Couldn't find file '%s'." % name)
IOError: Couldn't find file 'click.wav'.
Bootstrap to the start of init.init took 62.02s
Early init took 0.00s
Loader init took 0.05s
Loading error handling took 0.04s
Loading script took 0.35s
Loading persistent took 0.01s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.19s
Loading analysis data took 0.04s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Backing up script files to 'C:\\Users\\Administrator\\AppData\\Roaming/RenPy/backups\\Ha&Blade':
Dump and make backups. took 0.20s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.000000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.01s
Build styles took 0.00s
Load screen analysis took 0.00s
Analyze screens took 0.03s
Save screen analysis took 0.11s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.13s
Running _start took 0.00s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\display\core.py", line 1702, in make_draw
    __import__(mod)
ImportError: DLL load failed: ÕÒ²»µ½Ö¸¶¨µÄÄ£¿é¡£
Unknown renderer: angle

primary display bounds: (0, 0, 1280, 1024)
Windowed mode.
Screen sizes: virtual=(800, 600) physical=(800, 600) drawable=(800, 600)
Vendor: 'ATI Technologies Inc.'
Renderer: 'ATI Radeon 3000 Graphics'
Version: '3.3.11672 Compatibility Profile Context'
Display Info: <Info({'blit_sw_CC': False, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1024, 'current_w': 1280, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    GL_AMDX_debug_output
    GL_AMD_conservative_depth
    GL_AMD_debug_output
    GL_AMD_depth_clamp_separate
    GL_AMD_draw_buffers_blend
    GL_AMD_name_gen_delete
    GL_AMD_performance_monitor
    GL_AMD_pinned_memory
    GL_AMD_sample_positions
    GL_AMD_shader_stencil_export
    GL_ARB_ES2_compatibility
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_color_buffer_float
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_instanced
    GL_ARB_explicit_attrib_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_imaging
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_provoking_vertex
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_separate_shader_objects
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_stencil_export
    GL_ARB_shader_texture_lod
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_shadow_ambient
    GL_ARB_sync
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_compression
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_snorm
    GL_ARB_texture_storage
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_draw_buffers
    GL_ATI_envmap_bumpmap
    GL_ATI_fragment_shader
    GL_ATI_meminfo
    GL_ATI_separate_stencil
    GL_ATI_texture_compression_3dc
    GL_ATI_texture_env_combine3
    GL_ATI_texture_float
    GL_ATI_texture_mirror_once
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_bindable_uniform
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_compiled_vertex_array
    GL_EXT_copy_buffer
    GL_EXT_copy_texture
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_instanced
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_framebuffer_sRGB
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_histogram
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_pixel_buffer_object
    GL_EXT_point_parameters
    GL_EXT_provoking_vertex
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shadow_funcs
    GL_EXT_stencil_wrap
    GL_EXT_subtexture
    GL_EXT_texgen_reflection
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_buffer_object
    GL_EXT_texture_compression_latc
    GL_EXT_texture_compression_rgtc
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_cube_map
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_env_dot3
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod
    GL_EXT_texture_lod_bias
    GL_EXT_texture_mirror_clamp
    GL_EXT_texture_object
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_EXT_vertex_array
    GL_EXT_vertex_array_bgra
    GL_IBM_texture_mirrored_repeat
    GL_KTX_buffer_region
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_copy_depth_to_color
    GL_NV_copy_image
    GL_NV_explicit_multisample
    GL_NV_float_buffer
    GL_NV_half_float
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_NV_texture_barrier
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
    WGL_EXT_swap_control
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 8192
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 63.9730000496s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.032000 seconds.
- Frame drawn at 0.044000 seconds.
- Frame drawn at 0.061000 seconds.
- Frame drawn at 0.079000 seconds.
- 0.079000 seconds to render 5 frames.
Traceback (most recent call last):
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\execution.py", line 408, in run
    node.execute()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\ast.py", line 806, in execute
    renpy.python.py_exec_bytecode(self.code.bytecode, self.hide, store=self.store)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\python.py", line 1577, in py_exec_bytecode
    exec bytecode in globals, locals
  File "renpy/common/_layout/screen_load_save.rpym", line 35, in <module>
    $ ui.interact()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\ui.py", line 277, in interact
    rv = renpy.game.interface.interact(roll_forward=roll_forward, **kwargs)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\display\core.py", line 2425, in interact
    repeat, rv = self.interact_core(preloads=preloads, **kwargs)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\display\core.py", line 2725, in interact_core
    renpy.audio.audio.interact()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 919, in interact
    periodic()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 853, in periodic
    c.periodic()
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 400, in periodic
    topf = load(self.file_prefix + filename + self.file_suffix)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\audio\audio.py", line 66, in load
    rv = renpy.loader.load(fn)
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\loader.py", line 533, in load
    raise IOError("Couldn't find file '%s'." % name)
IOError: Couldn't find file 'sound/click.wav'.
Bootstrap to the start of init.init took 93.54s
Early init took 0.00s
Loader init took 0.06s
Loading error handling took 0.04s
Loading script took 0.34s
Loading persistent took 0.01s
Importing _renpysteam: ImportError('No module named _renpysteam',)
Running init code took 0.13s
Loading analysis data took 0.05s
Analyze and compile ATL took 0.02s
Index archives took 0.00s
Dump and make backups. took 0.21s
Cleaning cache took 0.00s
Making clean stores took 0.00s
DPI scale factor: 1.000000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.01s
Build styles took 0.00s
Load screen analysis took 0.04s
Analyze screens took 0.00s
Save screen analysis took 0.00s
Prepare screens took 0.12s
Save pyanalysis. took 0.00s
Save bytecode. took 0.00s
Running _start took 0.00s
Performance test:
Interface start took 0.02s
Couldn't import angle renderer:
Traceback (most recent call last):
  File "D:\GALPRO\renpy-6.99.10-sdk\renpy\display\core.py", line 1702, in make_draw
    __import__(mod)
ImportError: DLL load failed: ÕÒ²»µ½Ö¸¶¨µÄÄ£¿é¡£
Unknown renderer: angle

primary display bounds: (0, 0, 1280, 1024)
Windowed mode.
Screen sizes: virtual=(800, 600) physical=(800, 600) drawable=(800, 600)
Vendor: 'ATI Technologies Inc.'
Renderer: 'ATI Radeon 3000 Graphics'
Version: '3.3.11672 Compatibility Profile Context'
Display Info: <Info({'blit_sw_CC': False, 'bitsize': 32, 'wm': True, 'losses': (0, 0, 0, 8), 'hw': False, 'masks': (16711680L, 65280L, 255L, 0L), 'current_h': 1024, 'current_w': 1280, 'shifts': (16, 8, 0, 0), 'blit_sw_A': False, 'blit_hw': False, 'blit_sw': False, 'bytesize': 4, 'blit_hw_CC': False, 'blit_hw_A': False, 'video_mem': 268435456})>
Extensions:
    GL_AMDX_debug_output
    GL_AMD_conservative_depth
    GL_AMD_debug_output
    GL_AMD_depth_clamp_separate
    GL_AMD_draw_buffers_blend
    GL_AMD_name_gen_delete
    GL_AMD_performance_monitor
    GL_AMD_pinned_memory
    GL_AMD_sample_positions
    GL_AMD_shader_stencil_export
    GL_ARB_ES2_compatibility
    GL_ARB_base_instance
    GL_ARB_blend_func_extended
    GL_ARB_color_buffer_float
    GL_ARB_compressed_texture_pixel_storage
    GL_ARB_conservative_depth
    GL_ARB_copy_buffer
    GL_ARB_depth_buffer_float
    GL_ARB_depth_clamp
    GL_ARB_depth_texture
    GL_ARB_draw_buffers
    GL_ARB_draw_buffers_blend
    GL_ARB_draw_elements_base_vertex
    GL_ARB_draw_instanced
    GL_ARB_explicit_attrib_location
    GL_ARB_fragment_coord_conventions
    GL_ARB_fragment_program
    GL_ARB_fragment_program_shadow
    GL_ARB_fragment_shader
    GL_ARB_framebuffer_object
    GL_ARB_framebuffer_sRGB
    GL_ARB_geometry_shader4
    GL_ARB_get_program_binary
    GL_ARB_half_float_pixel
    GL_ARB_half_float_vertex
    GL_ARB_imaging
    GL_ARB_instanced_arrays
    GL_ARB_internalformat_query
    GL_ARB_map_buffer_alignment
    GL_ARB_map_buffer_range
    GL_ARB_multisample
    GL_ARB_multitexture
    GL_ARB_occlusion_query
    GL_ARB_occlusion_query2
    GL_ARB_pixel_buffer_object
    GL_ARB_point_parameters
    GL_ARB_point_sprite
    GL_ARB_provoking_vertex
    GL_ARB_sampler_objects
    GL_ARB_seamless_cube_map
    GL_ARB_separate_shader_objects
    GL_ARB_shader_bit_encoding
    GL_ARB_shader_objects
    GL_ARB_shader_precision
    GL_ARB_shader_stencil_export
    GL_ARB_shader_texture_lod
    GL_ARB_shading_language_100
    GL_ARB_shading_language_420pack
    GL_ARB_shading_language_packing
    GL_ARB_shadow
    GL_ARB_shadow_ambient
    GL_ARB_sync
    GL_ARB_texture_border_clamp
    GL_ARB_texture_buffer_object
    GL_ARB_texture_buffer_object_rgb32
    GL_ARB_texture_compression
    GL_ARB_texture_compression_rgtc
    GL_ARB_texture_cube_map
    GL_ARB_texture_env_add
    GL_ARB_texture_env_combine
    GL_ARB_texture_env_crossbar
    GL_ARB_texture_env_dot3
    GL_ARB_texture_float
    GL_ARB_texture_mirrored_repeat
    GL_ARB_texture_multisample
    GL_ARB_texture_non_power_of_two
    GL_ARB_texture_rectangle
    GL_ARB_texture_rg
    GL_ARB_texture_rgb10_a2ui
    GL_ARB_texture_snorm
    GL_ARB_texture_storage
    GL_ARB_timer_query
    GL_ARB_transform_feedback2
    GL_ARB_transform_feedback3
    GL_ARB_transform_feedback_instanced
    GL_ARB_transpose_matrix
    GL_ARB_uniform_buffer_object
    GL_ARB_vertex_array_bgra
    GL_ARB_vertex_array_object
    GL_ARB_vertex_buffer_object
    GL_ARB_vertex_program
    GL_ARB_vertex_shader
    GL_ARB_vertex_type_2_10_10_10_rev
    GL_ARB_viewport_array
    GL_ARB_window_pos
    GL_ATI_draw_buffers
    GL_ATI_envmap_bumpmap
    GL_ATI_fragment_shader
    GL_ATI_meminfo
    GL_ATI_separate_stencil
    GL_ATI_texture_compression_3dc
    GL_ATI_texture_env_combine3
    GL_ATI_texture_float
    GL_ATI_texture_mirror_once
    GL_EXT_abgr
    GL_EXT_bgra
    GL_EXT_bindable_uniform
    GL_EXT_blend_color
    GL_EXT_blend_equation_separate
    GL_EXT_blend_func_separate
    GL_EXT_blend_minmax
    GL_EXT_blend_subtract
    GL_EXT_compiled_vertex_array
    GL_EXT_copy_buffer
    GL_EXT_copy_texture
    GL_EXT_direct_state_access
    GL_EXT_draw_buffers2
    GL_EXT_draw_instanced
    GL_EXT_draw_range_elements
    GL_EXT_fog_coord
    GL_EXT_framebuffer_blit
    GL_EXT_framebuffer_multisample
    GL_EXT_framebuffer_object
    GL_EXT_framebuffer_sRGB
    GL_EXT_geometry_shader4
    GL_EXT_gpu_program_parameters
    GL_EXT_gpu_shader4
    GL_EXT_histogram
    GL_EXT_multi_draw_arrays
    GL_EXT_packed_depth_stencil
    GL_EXT_packed_float
    GL_EXT_packed_pixels
    GL_EXT_pixel_buffer_object
    GL_EXT_point_parameters
    GL_EXT_provoking_vertex
    GL_EXT_rescale_normal
    GL_EXT_secondary_color
    GL_EXT_separate_specular_color
    GL_EXT_shadow_funcs
    GL_EXT_stencil_wrap
    GL_EXT_subtexture
    GL_EXT_texgen_reflection
    GL_EXT_texture3D
    GL_EXT_texture_array
    GL_EXT_texture_buffer_object
    GL_EXT_texture_compression_latc
    GL_EXT_texture_compression_rgtc
    GL_EXT_texture_compression_s3tc
    GL_EXT_texture_cube_map
    GL_EXT_texture_edge_clamp
    GL_EXT_texture_env_add
    GL_EXT_texture_env_combine
    GL_EXT_texture_env_dot3
    GL_EXT_texture_filter_anisotropic
    GL_EXT_texture_integer
    GL_EXT_texture_lod
    GL_EXT_texture_lod_bias
    GL_EXT_texture_mirror_clamp
    GL_EXT_texture_object
    GL_EXT_texture_rectangle
    GL_EXT_texture_sRGB
    GL_EXT_texture_sRGB_decode
    GL_EXT_texture_shared_exponent
    GL_EXT_texture_snorm
    GL_EXT_texture_storage
    GL_EXT_texture_swizzle
    GL_EXT_timer_query
    GL_EXT_transform_feedback
    GL_EXT_vertex_array
    GL_EXT_vertex_array_bgra
    GL_IBM_texture_mirrored_repeat
    GL_KTX_buffer_region
    GL_NV_blend_square
    GL_NV_conditional_render
    GL_NV_copy_depth_to_color
    GL_NV_copy_image
    GL_NV_explicit_multisample
    GL_NV_float_buffer
    GL_NV_half_float
    GL_NV_primitive_restart
    GL_NV_texgen_reflection
    GL_NV_texture_barrier
    GL_SGIS_generate_mipmap
    GL_SGIS_texture_edge_clamp
    GL_SGIS_texture_lod
    GL_SUN_multi_draw_arrays
    GL_WIN_swap_hint
    WGL_EXT_swap_control
Number of texture units: 8
Using shader environment.
Using copy RTT.
Using gl renderer.
Texture testing:
- Hardware max texture size: 8192
- 64px textures work.
- 128px textures work.
- 256px textures work.
- 512px textures work.
- 1024px textures work.
- 2048px textures work.
Total time until interface ready: 95.228000164s
- Target is 5 frames in 0.333333333333 seconds.
- Frame drawn at 0.000000 seconds.
- Frame drawn at 0.034000 seconds.
- Frame drawn at 0.045000 seconds.
- Frame drawn at 0.062000 seconds.
- Frame drawn at 0.079000 seconds.
- 0.079000 seconds to render 5 frames.
